{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_QUIZES_START, FETCH_QUIZ_SUCCESS, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT, RETRY_QUIZ } from './actionTypes';\nexport function fetchQuizes() {\n  return async dispatch => {\n    dispatch(fetchQuizesStart());\n\n    try {\n      const response = await axios.get('https://react-quiz-c7272-default-rtdb.firebaseio.com/quizes.json');\n      const quizes = [];\n\n      for (const [key, value] of Object.entries(response.data)) {\n        quizes.push({\n          id: key,\n          name: `${value.quizName}`\n        });\n      }\n\n      dispatch(fetchQuizesSuccess(quizes));\n    } catch (e) {\n      dispatch(fetchQuizesError(e));\n    }\n  };\n}\nexport function fetchQuizesStart() {\n  return {\n    type: FETCH_QUIZES_START\n  };\n}\nexport function fetchQuizesSuccess(quizes) {\n  return {\n    type: FETCH_QUIZES_SUCCESS,\n    quizes: quizes\n  };\n}\nexport function fetchQuizesError(e) {\n  return {\n    type: FETCH_QUIZES_ERROR,\n    error: e\n  };\n}\nexport function fetchQuizByID(quizId) {\n  return async dispatch => {\n    dispatch(fetchQuizesStart());\n\n    try {\n      const response = await axios.get(`https://react-quiz-c7272-default-rtdb.firebaseio.com/quizes/${quizId}.json`);\n      const quiz = response.data.quiz;\n      const quizName = response.data.quizName;\n      dispatch(fetchQuizSuccess(quiz, quizName));\n    } catch (e) {\n      dispatch(fetchQuizesError(e));\n    }\n  };\n}\nexport function fetchQuizSuccess(quiz, quizName) {\n  return {\n    type: FETCH_QUIZ_SUCCESS,\n    quiz,\n    quizName\n  };\n}\nexport function quizSetState(answerState, results) {\n  return {\n    type: QUIZ_SET_STATE,\n    answerState,\n    results\n  };\n}\nexport function finishQuiz() {\n  return {\n    type: FINISH_QUIZ\n  };\n}\nexport function quizNext(number) {\n  return {\n    type: QUIZ_NEXT,\n    number\n  };\n}\nexport function quizAnswerClick(answerId) {\n  return (dispatch, getState) => {\n    const state = getState().quiz;\n    const question = state.quiz[state.activeQuestion];\n    const results = state.results;\n\n    if (question.rightAnswerId === answerId) {\n      dispatch(quizSetState({\n        [answerId]: 'sucess'\n      }, results + 1));\n    } else {\n      dispatch(quizSetState({\n        [answerId]: 'error'\n      }, results));\n    }\n\n    const timeout = window.setTimeout(() => {\n      if (isQuiz(state)) {\n        dispatch(finishQuiz());\n      } else {\n        dispatch(quizNext(state.activeQuestion + 1));\n      }\n\n      window.clearTimeout(timeout);\n    }, 300);\n  };\n}\n\nfunction isQuiz(state) {\n  return state.activeQuestion + 1 === state.quiz.length;\n}\n\nexport function RetryQuiz() {\n  return {\n    type: RETRY_QUIZ\n  };\n}\n_c = RetryQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"RetryQuiz\");","map":{"version":3,"sources":["D:/Kizune/project/Scraping/Quiz-creator/src/store/action/quiz.js"],"names":["axios","FETCH_QUIZES_START","FETCH_QUIZ_SUCCESS","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT","RETRY_QUIZ","fetchQuizes","dispatch","fetchQuizesStart","response","get","quizes","key","value","Object","entries","data","push","id","name","quizName","fetchQuizesSuccess","e","fetchQuizesError","type","error","fetchQuizByID","quizId","quiz","fetchQuizSuccess","quizSetState","answerState","results","finishQuiz","quizNext","number","quizAnswerClick","answerId","getState","state","question","activeQuestion","rightAnswerId","timeout","window","setTimeout","isQuiz","clearTimeout","length","RetryQuiz"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {FETCH_QUIZES_START,\r\n\t     FETCH_QUIZ_SUCCESS,\r\n\t     FETCH_QUIZES_SUCCESS,\r\n\t\t  FETCH_QUIZES_ERROR,\r\n\t\t  QUIZ_SET_STATE,\r\n\t\t\tFINISH_QUIZ,\r\n\t\t\tQUIZ_NEXT,\r\n\t\t\tRETRY_QUIZ} from './actionTypes'\r\nexport  function fetchQuizes(){\r\n\treturn async dispatch => {\r\n\t\tdispatch(fetchQuizesStart())\r\n\t\ttry{\r\n \tconst response = await axios.get('https://react-quiz-c7272-default-rtdb.firebaseio.com/quizes.json')\r\n \tconst quizes=[]\r\n \t\r\n\r\n for (const [key,value] of Object.entries(response.data)) {\r\n \t\t\r\n \t\tquizes.push({\r\n \t\t\tid:key,\r\n \t\tname:`${value.quizName}`\r\n \t\t})\r\n \t\t\r\n\r\n \t}\r\n \tdispatch(fetchQuizesSuccess(quizes))\r\n }catch(e){\r\n \tdispatch (fetchQuizesError(e))\r\n }\r\n}\r\n\r\n\t\r\n}\r\n\r\n\r\nexport function fetchQuizesStart() {\r\n\treturn{\r\n\t\ttype:FETCH_QUIZES_START\r\n\t}\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes){\r\nreturn{\r\n\t\ttype:FETCH_QUIZES_SUCCESS,\r\n\t\tquizes:quizes\r\n\t}\r\n}\r\n\r\nexport function fetchQuizesError(e){\r\nreturn{\r\n\t\ttype:FETCH_QUIZES_ERROR,\r\n\t\terror:e\r\n\t}\r\n}\r\n\r\n\r\nexport function fetchQuizByID(quizId) {\r\n\treturn async dispatch => {\r\n\t\tdispatch(fetchQuizesStart())\r\n\r\n\t\t try{\r\n\r\n  const response = await axios.get(`https://react-quiz-c7272-default-rtdb.firebaseio.com/quizes/${quizId}.json`)\r\n\r\n  const quiz=response.data.quiz\r\n  const quizName=response.data.quizName \r\n dispatch(fetchQuizSuccess(quiz,quizName))\r\n}catch(e){\r\n  dispatch(fetchQuizesError(e))\r\n}\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport function fetchQuizSuccess(quiz,quizName){\r\n\treturn {\r\n\t\ttype:FETCH_QUIZ_SUCCESS,\r\n\t\tquiz,quizName\r\n\t}\r\n} \r\n\r\nexport function quizSetState(answerState,results){\r\n\treturn {\r\n\t\ttype:QUIZ_SET_STATE,\r\n\t\tanswerState,results\r\n\t}\r\n}\r\n\r\nexport function finishQuiz(){\r\n\treturn{\r\n\t\ttype:FINISH_QUIZ\r\n\t}\r\n}\r\nexport function quizNext(number){\r\n\treturn{\r\n\t\ttype:QUIZ_NEXT,\r\n\t\tnumber\r\n\r\n\t}\r\n}\r\nexport function quizAnswerClick(answerId){\r\n\treturn (dispatch,getState) => {\r\n\t\tconst state=getState().quiz\r\nconst question=state.quiz[state.activeQuestion]\r\nconst results=state.results\r\nif (question.rightAnswerId === answerId){\r\n\r\ndispatch(quizSetState({[answerId]:'sucess'},results+1))\r\n}else {\r\n dispatch(quizSetState({[answerId]:'error'},results))\r\n}\r\n\r\nconst timeout=window.setTimeout(() => {\r\n  if (isQuiz(state)){\r\n  \tdispatch(finishQuiz())\r\n    \r\n  }else{\r\n  \tdispatch(quizNext(state.activeQuestion+1))\r\n      \r\n  }\r\n\r\n\r\nwindow.clearTimeout(timeout)\r\n},300)\r\n\r\n\t}\r\n}\r\n\r\n\r\nfunction isQuiz(state){\r\n\treturn state.activeQuestion +1 === state.quiz.length\r\n}\r\n\r\nexport function RetryQuiz(){\r\n\treturn {\r\n\t\ttype:RETRY_QUIZ\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}