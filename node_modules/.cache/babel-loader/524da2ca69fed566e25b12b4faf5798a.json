{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kizune\\\\project\\\\Scraping\\\\Quiz-creator\\\\src\\\\components\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport './Quiz.css';\nimport ActiveQuiz from './ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from './FinishedQuiz/FinishedQuiz';\nimport Loader from './../UI/Loader/Loader';\nimport { useParams } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { fetchQuizByID, quizAnswerClick, RetryQuiz } from './../../store/action/quiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n\n  function ComponentWithRouterProp(props) {\n    _s();\n\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      router: {\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(ComponentWithRouterProp, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n    return [useParams];\n  });\n\n  return ComponentWithRouterProp;\n}\n\nclass Quiz extends Component {\n  componentDidMount() {\n    this.props.fetchQuizByID(this.props.router.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.RetryQuiz();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"QuizWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.props.quizName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 1\n        }, this), this.props.loading || !this.props.quiz ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 3\n        }, this) : this.props.isFinished ? /*#__PURE__*/_jsxDEV(FinishedQuiz, {\n          results: this.props.results,\n          quizLength: this.props.quiz.length,\n          onRetry: this.props.RetryQuiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this) : /*#__PURE__*/_jsxDEV(ActiveQuiz, {\n          answers: this.props.quiz[this.props.activeQuestion].answers,\n          question: this.props.quiz[this.props.activeQuestion].question,\n          onAnswerClick: this.props.quizAnswerClick,\n          quizLength: this.props.quiz.length,\n          AnswerNumber: this.props.activeQuestion + 1,\n          state: this.props.answerState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    activeQuestion: state.quiz.activeQuestion,\n    answerState: state.quiz.answerState,\n    quizName: state.quiz.quizName,\n    quiz: state.quiz.quiz,\n    loading: state.quiz.loading\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return {\n    fetchQuizByID: id => dispatch(fetchQuizByID(id)),\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n    RetryQuiz: () => dispatch(RetryQuiz())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(withRouter(Quiz));","map":{"version":3,"sources":["D:/Kizune/project/Scraping/Quiz-creator/src/components/Quiz/Quiz.js"],"names":["React","Component","ActiveQuiz","FinishedQuiz","Loader","useParams","connect","fetchQuizByID","quizAnswerClick","RetryQuiz","withRouter","ComponentWithRouterProp","props","params","Quiz","componentDidMount","router","id","componentWillUnmount","render","quizName","loading","quiz","isFinished","results","length","activeQuestion","answers","question","answerState","mapStateToProps","state","mapDispathToProps","dispatch","answerId"],"mappings":"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","sourcesContent":["import React,{Component}  from 'react'\r\nimport './Quiz.css'\r\nimport ActiveQuiz from './ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from './FinishedQuiz/FinishedQuiz'\r\nimport Loader from './../UI/Loader/Loader'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {connect } from 'react-redux'\r\nimport {fetchQuizByID,quizAnswerClick,RetryQuiz} from './../../store/action/quiz'\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    \r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{  params }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\nclass Quiz extends Component {\r\n\r\n \r\n\r\n\r\n \r\ncomponentDidMount (){\r\n  this.props.fetchQuizByID(this.props.router.params.id)\r\n}\r\n\r\ncomponentWillUnmount(){\r\n  this.props.RetryQuiz()\r\n}\r\n\r\nrender() {\r\n  return(\r\n<div className=\"Quiz\">\r\n\r\n\r\n<div className='QuizWrapper'>\r\n<h1>{this.props.quizName}</h1>\r\n{this.props.loading || !this.props.quiz \r\n? <Loader /> :  \r\n\r\n  this.props.isFinished\r\n   ? <FinishedQuiz\r\n   results={this.props.results}\r\n   quizLength={this.props.quiz.length}\r\n   onRetry={this.props.RetryQuiz}\r\n\r\n   />\r\n   : <ActiveQuiz \r\nanswers={this.props.quiz[this.props.activeQuestion].answers} \r\nquestion={this.props.quiz[this.props.activeQuestion].question}\r\nonAnswerClick={this.props.quizAnswerClick}\r\nquizLength={this.props.quiz.length}\r\nAnswerNumber={this.props.activeQuestion+1}\r\nstate={this.props.answerState}\r\n/>\r\n}\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n    )\r\n}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\nresults:state.quiz.results,\r\nisFinished:state.quiz.isFinished,\r\nactiveQuestion:state.quiz.activeQuestion,\r\nanswerState:state.quiz.answerState,\r\nquizName:state.quiz.quizName,\r\nquiz:state.quiz.quiz,\r\nloading:state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispathToProps(dispatch){\r\n  return {\r\n    fetchQuizByID:id => dispatch(fetchQuizByID(id)),\r\n    quizAnswerClick:answerId =>dispatch(quizAnswerClick(answerId)),\r\n    RetryQuiz:() => dispatch (RetryQuiz())\r\n  }\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps,mapDispathToProps) (withRouter(Quiz))"]},"metadata":{},"sourceType":"module"}